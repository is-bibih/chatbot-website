{"remainingRequest":"/home/vivi/gits/COVID-19/public/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vivi/gits/COVID-19/public/src/components/DownloadExcel.vue?vue&type=style&index=0&id=5f4f938f&scoped=true&lang=css&","dependencies":[{"path":"/home/vivi/gits/COVID-19/public/src/components/DownloadExcel.vue","mtime":1594241453831},{"path":"/home/vivi/gits/COVID-19/public/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vivi/gits/COVID-19/public/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vivi/gits/COVID-19/public/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vivi/gits/COVID-19/public/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/vivi/gits/COVID-19/public/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vivi/gits/COVID-19/public/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogInNjb3BlZCIgYXR0cmlidXRlIGxpbWl0IHRoZSBDU1MgdG8gdGhpcyBjb21wb25lbnQgb25seSAqLwouZG93bmxvYWQtZXhjZWwgewogIG1hcmdpbi10b3A6IDMwcHg7Cn0K"},{"version":3,"sources":["DownloadExcel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA;AACA;AACA;AACA","file":"DownloadExcel.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"download-sorted-excel\">\n        <download-excel\n            :data   = users\n            :fields = \"json_fields\"\n            worksheet = \"My Worksheet\"\n            name    = \"queries_meddy.xls\">\n    \t    <b-button variant=\"success\">Descargar (ordenado por {{ sortName }})</b-button>\n        </download-excel>\n    </div>\n</template>\n\n<script>\nimport { usersRef } from '../firebase';\n\nexport default {\n  props : ['sortBy', 'sortName', 'nameList', 'startTime', 'endTime'],\n  data() {\n    return {\n      users: [],\n      json_fields: {\n\t'No. sesión': 'SessionId',\n\t'Nombre de usuario': 'Name',\n\t'Fecha': 'Date',\n\t'Hora': 'Hour',\n\t'No. interacción': 'index',\n        'Escrito usuario': 'TextQuery',\n        'Escrito agente': 'IntentName',\n        'Certidumbre': 'Confidence'\n      },\n    };\n  },\n  firebase() {\n//    // ordenar por sesion\n//    var users = usersRef.orderByChild('SessionId');\n//    // obtener la lista de queries\n//    users.once('value', function(snapshot) {\n//      // contador para el indice\n//      var i = 1;\n//      // variable para comparar sesion\n//      var tempkey = '';\n//      // iterar sobre la lista de queries\n//      snapshot.forEach(function(childSnap) {\n//\t// incrementar el indice o reiniciarlo\n//\tif (tempkey == childSnap.val()['SessionId']) {\n//\t\ti++;\n//\t} else {i = 1;}\n//\t// actualizar variable para sesion\n//\ttempkey = childSnap.val()['SessionId'];\n//\t// agregar indice a los datos\n//\tusersRef.child(childSnap.key).child('index').set(i);\n//      });\n//    });\n//    \n//    if (this.sortBy) {\n//      return {\n//           users: usersRef.orderByChild(this.sortBy),\n//      }\n//    } else {\n//      return {\n//         users: users\n//      }\n//    }\n      var users = usersRef.orderByChild(this.sortBy);\n      if (this.sortBy == 'Time') {\n\t// es un query, entonces se necesita usar el ref para accesar los datos\n\tusers = users.startAt(this.startTime).endAt(this.endTime).ref;\n\treturn {\n\t  users: users,\n\t}\n      } else if (this.sortBy == 'Name') {\n\treturn {\n\t  users: users.equalTo(this.nameList),\n\t}\n      } else {\n\treturn {\n\t  users: users,\n\t}\n      }\n  }\n};\n\n</script>\n\n<style scoped>  /* \"scoped\" attribute limit the CSS to this component only */\n  .download-excel {\n    margin-top: 30px;\n  }\n</style>\n"]}]}